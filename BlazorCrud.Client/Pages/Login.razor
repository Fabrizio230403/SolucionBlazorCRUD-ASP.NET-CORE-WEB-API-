@page "/"
@layout LoginLayout

@inject HttpClient httpClient
@using BlazorCrud.Client.Extensiones
@using BlazorCrud.Shared
@using CurrieTechnologies.Razor.SweetAlert2;
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager
@inject SweetAlertService Swal;

<style>
    body {
        background-image: url('/images/consultorias.jpg');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        height: 100vh;
    }

    .login-container {
        background-color: rgba(255, 255, 255, 0.8);
        padding: 40px;
        border-radius: 10px;
    }

    .card {
        border-radius: 8px;
        border: none;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

    .text-primary {
        color: #007bff !important;
    }
    .text-center{
        font-size: 0.980rem;
    }

    .form-label {
        font-weight: bold;
    }

    .form-text {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .forgot-password {
        font-size: 0.925rem;
        color: black;
    }

    .forgot-password a {
        color: #007bff;
        text-decoration: none;
    }

     .forgot-password a:hover {
        text-decoration: underline;
     }

     
    .social-login-btns {
        display: flex;
        justify-content: center;  
        margin-top: 20px;
        gap: 30px;  
    }

    .social-btn {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        border: 1px solid #ddd;
        cursor: pointer;
        transition: transform 0.3s;
    }

        
        .social-btn:hover {
            transform: scale(1.1);
        }

    
    .google-btn {
        background-color: #db4437; 
    }

    .facebook-btn {
        background-color: #3b5998; 
    }

    .github-btn {
        background-color: #333;  
    }

 
    .social-btn i {
        color: white;
    }
</style>

<div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="login-container col-md-6 col-lg-4 shadow-lg">
        <div class="card-body">
            <div class="text-center mb-4">
                <h3 class="h4 text-primary">Iniciar Sesión</h3>
            </div>


            <!-- Formulario de inicio de sesión -->
            <div class="mb-3">
                <label for="correo" class="form-label">Correo</label>
                <input @bind="login.Correo" type="email" id="correo" class="form-control" placeholder="Ingresa tu correo" required />
            </div>

            <div class="mb-3 position-relative">
                <label for="clave" class="form-label">Contraseña</label>
                <div class="input-group">
                    <input @bind="login.Clave" type="@passwordInputType" id="clave" class="form-control" placeholder="Ingresa tu contraseña" required />
                    <span class="input-group-text bg-white border-0" style="cursor: pointer;" @onclick="TogglePasswordVisibility">
                        <i class="@passwordIcon"></i>
                    </span>
                </div>
            </div>

           

           
            <div class="mb-3 forgot-password text-end">
                <span>¿Has olvidado tu contraseña? </span>
                <a href="/recuperar-contraseña">Restablecer aquí.</a>
            </div>

            <div class="d-grid gap-2">
                <button @onclick="IniciarSesion" class="btn btn-primary">Iniciar sesión</button>
            </div>

            
            <div class="text-center mt-3">
                <p class="mb-0">¿No tienes una cuenta? <a href="/registro" class="link-primary">Regístrate aquí</a></p>
            </div>


         
            <div class="social-login-btns">
                <!-- Google -->
                <button href="javascript:void(0)" class="social-btn google-btn">
                    <i class="fab fa-google text-white"></i>  
                </button>
                <!-- Facebook -->
                <button href="javascript:void(0)" class="social-btn facebook-btn">
                    <i class="fab fa-facebook-f text-white"></i>  
                </button>
                <!-- GitHub -->
                <button href="javascript:void(0)" class="social-btn github-btn">
                    <i class="fab fa-github text-white"></i>  
                </button>
            </div>
        </div>
    </div>
</div>



@code {
    private LoginDTO login = new LoginDTO();

    private string passwordInputType = "password";  
    private string passwordIcon = "fas fa-eye-slash";  

    private void TogglePasswordVisibility()
    {
         
        if (passwordInputType == "password")
        {
            passwordInputType = "text";
            passwordIcon = "fas fa-eye"; 
        }
        else
        {
            passwordInputType = "password";
            passwordIcon = "fas fa-eye-slash";  
        }
    }

    private async Task IniciarSesion()
    {
        var loginResponse = await httpClient.PostAsJsonAsync("/api/Usuario/Login", login);
        if (loginResponse.IsSuccessStatusCode)
        {
            // Aquí se espera que la respuesta incluya tanto el token como los datos del usuario
            var responseContent = await loginResponse.Content.ReadFromJsonAsync<LoginResponseDTO>();

            if (responseContent != null)
            {
                var sesionUsuario = new SesionDTO
                    {
                        UsuarioId = responseContent.Usuario.UsuarioId,
                        Nombre = responseContent.Usuario.Nombre,
                        Correo = responseContent.Usuario.Email,
                        Rol = responseContent.Usuario.Rol!.Nombre,
                        Token = responseContent.Token
                    };

                // Actualiza el estado de autenticación
                var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
                await autenticacionExt.ActualizarEstadoAutenticacion(sesionUsuario);

                 
                await Swal.FireAsync("Bienvenido", $"¡Hola {sesionUsuario.Nombre}! Has iniciado sesión correctamente.", SweetAlertIcon.Success);

                 
                navManager.NavigateTo("/Home");
            }
        }
        else
        {
            // Aquí se usa SweetAlert para mostrar el mensaje de error
            await Swal.FireAsync("Error", "Usuario o clave incorrectos. Intenta nuevamente.", SweetAlertIcon.Error);
        }
    }
}
